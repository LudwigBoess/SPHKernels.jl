var documenterSearchIndex = {"docs":
[{"location":"kernels/#Kernels","page":"Kernels","title":"Kernels","text":"","category":"section"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"CurrentModule = SPHKernels\nDocTestSetup = quote\n    using SPHKernels\nend","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"This package supplies a number of kernels frequently used in Smoothed-Particle Hydrodynamics (SPH), as well as functions to evaluate their values and derivatives in 2D and 3D.","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"These kernels include the B-splines (Cubic and Quintic) suggested in Monaghan & Lattanzio (1985) and the Wendland functions (WendlandC4 and WendlandC6) as suggested in Dehnen & Aly (2012).","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"In this implementation we follow the convention of Dehnen&Aly in using the 'compact kernel support' as a means to define the maximum extent of the kernel. They denote this H in their paper, for convenience (aka for not having to type caps) we use h in the code.","category":"page"},{"location":"kernels/#Evaluating-Kernels","page":"Kernels","title":"Evaluating Kernels","text":"","category":"section"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"To evaluate a 2D kernel you need to use the function","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"kernel_value_2D(k::SPHKernel, u::Float64, h_inv::Float64)","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"where SPHKernel is the supertype for an implemented SPH kernel, u = fracxh is the distance to the kernel origin in measures of the compact kernel support and h_inv is the inverse of the compact kernel support.","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"The same goes for a 3D kernel","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"kernel_value_3D(k::SPHKernel, u::Float64, h_inv::Float64)","category":"page"},{"location":"kernels/#Evaluating-Derivatives","page":"Kernels","title":"Evaluating Derivatives","text":"","category":"section"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"Similar to Evaluating Kernels you can evluate a kernel derivative with","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"kernel_deriv_2D(k::SPHKernel, u::Float64, h_inv::Float64)","category":"page"},{"location":"kernels/#Bias-Correction","page":"Kernels","title":"Bias Correction","text":"","category":"section"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"You can correct for the kernel bias of the Wendland kernels as described in Dehnen & Aly (2012), Eq. 18 + 19 with the functions:","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"bias_correction_2D(kernel::SPHKernel, density::Float64, m::Float64, h_inv::Float64)\nbias_correction_3D(kernel::SPHKernel, density::Float64, m::Float64, h_inv::Float64)","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"This will return a new value for the density:","category":"page"},{"location":"kernels/","page":"Kernels","title":"Kernels","text":"using SPHKernels # hide\ndensity = 1.0\nkernel  = WendlandC6()\n\n# correct density\ndensity = bias_correction_3D(kernel, density, 1.0, 0.5)\n\nprintln(\"density = $density\")","category":"page"},{"location":"api/#API-Reference","page":"API reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = SPHKernels\nDocTestSetup = quote\n    using SPHKernels\nend","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"","category":"page"},{"location":"api/#Exported-Types","page":"API reference","title":"Exported Types","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [SPHKernels]\nPrivate = false\nOrder = [:type]","category":"page"},{"location":"api/#SPHKernels.Cubic","page":"API reference","title":"SPHKernels.Cubic","text":"struct Cubic <: SPHKernel\n    n_neighbours::Int64\n    norm_2D::Float64\n    norm_3D::Float64\n    function Cubic(n_neighbours::Int64=64)\n        new(n_neighbours, 8.0/π, 8.0/π)\n    end\nend\n\nDatatype for cubic sph spline.\n\n\n\n\n\n","category":"type"},{"location":"api/#SPHKernels.Quintic","page":"API reference","title":"SPHKernels.Quintic","text":"struct Quintic <: SPHKernel\n    n_neighbours::Int64\n    norm_2D::Float64\n    norm_3D::Float64\n    function Quintic(n_neighbours::Integer=216)\n        new(n_neighbours, 15309.0/(478.0*π), 2187.0/(40.0*pi))\n    end\nend\n\nDatatype for quintic sph spline.\n\n\n\n\n\n","category":"type"},{"location":"api/#SPHKernels.SPHKernel","page":"API reference","title":"SPHKernels.SPHKernel","text":"SPHKernel\n\nSupertype for all SPH kernels.\n\n\n\n\n\n","category":"type"},{"location":"api/#SPHKernels.WendlandC4","page":"API reference","title":"SPHKernels.WendlandC4","text":"struct WendlandC4 <: SPHKernel\n    n_neighbours::Int64\n    norm_2D::Float64\n    norm_3D::Float64\n    function WendlandC4(n_neighbours::Int64=216)\n        new(n_neighbours,9.0/π, 495.0/(32.0 * π))\n    end\nend\n\n\n\n\n\n","category":"type"},{"location":"api/#SPHKernels.WendlandC6","page":"API reference","title":"SPHKernels.WendlandC6","text":"struct WendlandC6 <: SPHKernel\n    n_neighbours::Int64\n    norm_2D::Float64\n    norm_3D::Float64\n    function WendlandC6(n_neighbours::Int64=295)\n        new(n_neighbours, 78.0/(7.0*π), 1365.0/(64.0*π))\n    end\nend\n\n\n\n\n\n","category":"type"},{"location":"api/#SPHKernels.WendlandC8","page":"API reference","title":"SPHKernels.WendlandC8","text":"struct WendlandC8 <: SPHKernel\n    n_neighbours::Int64\n    norm_2D::Float64\n    norm_3D::Float64\n    function WendlandC6(n_neighbours::Integer=395)\n        new(n_neighbours, 8.0/(3π), 357.0/(64π))\n    end\nend\n\n\n\n\n\n","category":"type"},{"location":"api/#Exported-Functions","page":"API reference","title":"Exported Functions","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [SPHKernels]\nPrivate = false\nOrder = [:function]","category":"page"},{"location":"api/#SPHKernels.bias_correction_2D-Tuple{Cubic,Real,Real,Real}","page":"API reference","title":"SPHKernels.bias_correction_2D","text":"bias_correction_2D(kernel::Cubic, density::Real, m::Real, h_inv::Real)\n\nDoes not do anything for the BSplines. Implemented for stability.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.bias_correction_2D-Tuple{Quintic,Real,Real,Real}","page":"API reference","title":"SPHKernels.bias_correction_2D","text":"bias_correction_2D(kernel::Quintic, density::Real, m::Real, h_inv::Real)\n\nDoes not do anything for the BSplines. Implemented for stability.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.bias_correction_2D-Tuple{WendlandC4,Real,Real,Real}","page":"API reference","title":"SPHKernels.bias_correction_2D","text":"bias_correction_2D(kernel::WendlandC4, density::Real, m::Real, h_inv::Real)\n\nCorrects the density estimate for the kernel bias. See Dehnen&Aly 2012, eq. 18+19.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.bias_correction_2D-Tuple{WendlandC6,Real,Real,Real}","page":"API reference","title":"SPHKernels.bias_correction_2D","text":"bias_correction_2D(kernel::WendlandC6, density::Real, m::Real, h_inv::Real)\n\nCorrects the density estimate for the kernel bias. See Dehnen&Aly 2012, eq. 18+19.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.bias_correction_2D-Tuple{WendlandC8,Real,Real,Real}","page":"API reference","title":"SPHKernels.bias_correction_2D","text":"bias_correction_2D(kernel::WendlandC8, density::Real, m::Real, h_inv::Real)\n\nCorrects the density estimate for the kernel bias. See Dehnen&Aly 2012, eq. 18+19.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.bias_correction_3D-Tuple{Cubic,Real,Real,Real}","page":"API reference","title":"SPHKernels.bias_correction_3D","text":"bias_correction_3D(kernel::Cubic, density::Real, m::Real, h_inv::Real)\n\nDoes not do anything for the BSplines. Implemented for stability.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.bias_correction_3D-Tuple{Quintic,Real,Real,Real}","page":"API reference","title":"SPHKernels.bias_correction_3D","text":"bias_correction_3D(kernel::Quintic, density::Real, m::Real, h_inv::Real)\n\nDoes not do anything for the BSplines. Implemented for stability.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.bias_correction_3D-Tuple{WendlandC4,Real,Real,Real}","page":"API reference","title":"SPHKernels.bias_correction_3D","text":"bias_correction_3D(kernel::WendlandC4, density::Real, m::Real, h_inv::Real)\n\nCorrects the density estimate for the kernel bias. See Dehnen&Aly 2012, eq. 18+19.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.bias_correction_3D-Tuple{WendlandC6,Real,Real,Real}","page":"API reference","title":"SPHKernels.bias_correction_3D","text":"bias_correction_3D(kernel::WendlandC6, density::Real, m::Real, h_inv::Real)\n\nCorrects the density estimate for the kernel bias. See Dehnen&Aly 2012, eq. 18+19.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.bias_correction_3D-Tuple{WendlandC8,Real,Real,Real}","page":"API reference","title":"SPHKernels.bias_correction_3D","text":"bias_correction_3D(kernel::WendlandC8, density::Real, m::Real, h_inv::Real)\n\nCorrects the density estimate for the kernel bias. See Dehnen&Aly 2012, eq. 18+19.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_deriv_2D-Tuple{Cubic,Real,Real}","page":"API reference","title":"SPHKernels.kernel_deriv_2D","text":"kernel_deriv_2D(kernel::Cubic, u::Real, h_inv::Real)\n\nEvaluate the derivative of the Cubic spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_deriv_2D-Tuple{Quintic,Real,Real}","page":"API reference","title":"SPHKernels.kernel_deriv_2D","text":"kernel_deriv_2D(kernel::Quintic, u::Real, h_inv::Real)\n\nEvaluate the derivative of the Quintic spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_deriv_2D-Tuple{WendlandC4,Real,Real}","page":"API reference","title":"SPHKernels.kernel_deriv_2D","text":"kernel_deriv_2D(kernel::WendlandC4, u::Real, h_inv::Real)\n\nEvaluate the derivative of the WendlandC4 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_deriv_2D-Tuple{WendlandC6,Real,Real}","page":"API reference","title":"SPHKernels.kernel_deriv_2D","text":"kernel_deriv_2D(kernel::WendlandC6, u::Real, h_inv::Real)\n\nEvaluate the derivative of the WendlandC6 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_deriv_2D-Tuple{WendlandC8,Real,Real}","page":"API reference","title":"SPHKernels.kernel_deriv_2D","text":"kernel_deriv_2D(kernel::WendlandC8, u::Real, h_inv::Real)\n\nEvaluate the derivative of the WendlandC6 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_deriv_3D-Tuple{Cubic,Real,Real}","page":"API reference","title":"SPHKernels.kernel_deriv_3D","text":"kernel_deriv_3D(kernel::Cubic, u::Real, h_inv::Real)\n\nEvaluate the derivative of the Cubic spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_deriv_3D-Tuple{Quintic,Real,Real}","page":"API reference","title":"SPHKernels.kernel_deriv_3D","text":"kernel_deriv_3D(kernel::Quintic, u::Real, h_inv::Real)\n\nEvaluate the derivative of the Quintic spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_deriv_3D-Tuple{WendlandC4,Real,Real}","page":"API reference","title":"SPHKernels.kernel_deriv_3D","text":"kernel_deriv_3D(kernel::WendlandC4, u::Real, h_inv::Real)\n\nEvaluate the derivative of the WendlandC4 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_deriv_3D-Tuple{WendlandC6,Real,Real}","page":"API reference","title":"SPHKernels.kernel_deriv_3D","text":"kernel_deriv_3D(kernel::WendlandC6, u::Real, h_inv::Real)\n\nEvaluate the derivative of the WendlandC6 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_deriv_3D-Tuple{WendlandC8,Real,Real}","page":"API reference","title":"SPHKernels.kernel_deriv_3D","text":"kernel_deriv_3D(kernel::WendlandC8, u::Real, h_inv::Real)\n\nEvaluate the derivative of the WendlandC8 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_value_2D-Tuple{Cubic,Real,Real}","page":"API reference","title":"SPHKernels.kernel_value_2D","text":"kernel_value_2D(kernel::Cubic, u::Real, h_inv::Real)\n\nEvaluate cubic spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_value_2D-Tuple{Quintic,Real,Real}","page":"API reference","title":"SPHKernels.kernel_value_2D","text":"kernel_value_2D(kernel::Quintic, u::Real, h_inv::Real)\n\nEvaluate quintic spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_value_2D-Tuple{WendlandC4,Real,Real}","page":"API reference","title":"SPHKernels.kernel_value_2D","text":"kernel_value_2D(kernel::WendlandC4, u::Real, h_inv::Real)\n\nEvaluate WendlandC4 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_value_2D-Tuple{WendlandC6,Real,Real}","page":"API reference","title":"SPHKernels.kernel_value_2D","text":"kernel_value_2D(kernel::WendlandC6, u::Real, h_inv::Real)\n\nEvaluate WendlandC6 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_value_2D-Tuple{WendlandC8,Real,Real}","page":"API reference","title":"SPHKernels.kernel_value_2D","text":"kernel_value_2D(kernel::WendlandC8, u::Real, h_inv::Real)\n\nEvaluate WendlandC6 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_value_3D-Tuple{Cubic,Real,Real}","page":"API reference","title":"SPHKernels.kernel_value_3D","text":"kernel_value_3D(kernel::Cubic, u::Real, h_inv::Real)\n\nEvaluate cubic spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_value_3D-Tuple{Quintic,Real,Real}","page":"API reference","title":"SPHKernels.kernel_value_3D","text":"kernel_value_3D(kernel::Quintic, u::Real, h_inv::Real)\n\nEvaluate quintic spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_value_3D-Tuple{WendlandC4,Real,Real}","page":"API reference","title":"SPHKernels.kernel_value_3D","text":"kernel_value_3D(kernel::WendlandC4, u::Real, h_inv::Real)\n\nEvaluate WendlandC4 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_value_3D-Tuple{WendlandC6,Real,Real}","page":"API reference","title":"SPHKernels.kernel_value_3D","text":"kernel_value_3D(kernel::WendlandC6, u::Real, h_inv::Real)\n\nEvaluate WendlandC6 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHKernels.kernel_value_3D-Tuple{WendlandC8,Real,Real}","page":"API reference","title":"SPHKernels.kernel_value_3D","text":"kernel_value_3D(kernel::WendlandC8, u::Real, h_inv::Real)\n\nEvaluate WendlandC8 spline at position u = fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#Private-Functions","page":"API reference","title":"Private Functions","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [SPHKernels]\nPublic = false\nOrder = [:function]","category":"page"},{"location":"api/#Private-Types","page":"API reference","title":"Private Types","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [SPHKernels]\nPublic = false\nOrder = [:type]","category":"page"},{"location":"extending/#Adding-Kernels","page":"Extending","title":"Adding Kernels","text":"","category":"section"},{"location":"extending/","page":"Extending","title":"Extending","text":"CurrentModule = SPHKernels\nDocTestSetup = quote\n    using SPHKernels\nend","category":"page"},{"location":"extending/","page":"Extending","title":"Extending","text":"If you need a different kernel function than the ones I implemented you can add them by defining a new kernel struct as a subtype of SPHKernel","category":"page"},{"location":"extending/","page":"Extending","title":"Extending","text":"using SPHKernels # hide\nstruct MyKernel <: SPHKernel\n    n_neighbours::Int64\n    norm_2D::Float64\n    norm_3D::Float64\n    function MyKernel(n_neighbours::Int64=1000)\n        new(n_neighbours, 1.0, 1.0)\n    end\nend","category":"page"},{"location":"extending/","page":"Extending","title":"Extending","text":"and defining its value and derivative in 2D and 3D, e.g.","category":"page"},{"location":"extending/","page":"Extending","title":"Extending","text":"@inline function kernel_value_2D(kernel::MyKernel, u::Float64, h_inv::Float64)\n\n    if u < 1.0\n        n = kernel.norm_2D * h_inv^2\n        return 1.0 * n\n    else\n        return 0.0\n    end\n\nend","category":"page"},{"location":"extending/","page":"Extending","title":"Extending","text":"@inline function kernel_deriv_2D(kernel::MyKernel, u::Float64, h_inv::Float64)\n    return 0.0\nend","category":"page"},{"location":"extending/","page":"Extending","title":"Extending","text":"so you can run the following code","category":"page"},{"location":"extending/","page":"Extending","title":"Extending","text":"k = MyKernel()\nu = 0.5\nh_inv = 1.0\n\nv = kernel_value_2D(k, u, h_inv)\nprintln(\"MyKernel value: $v\")\n\nd = kernel_deriv_2D(k, u, h_inv)\nprintln(\"MyKernel derivative: $d\")","category":"page"},{"location":"extending/#Contributing","page":"Extending","title":"Contributing","text":"","category":"section"},{"location":"extending/","page":"Extending","title":"Extending","text":"Please feel free to create a pull request if you feel that your kernel could be useful to others! I only ask you to also add unit tests for your kernels in the test/runtests.jl file.","category":"page"},{"location":"install/#Install","page":"Install","title":"Install","text":"","category":"section"},{"location":"install/","page":"Install","title":"Install","text":"As usual with Julia you can install the package via the internal package manager","category":"page"},{"location":"install/","page":"Install","title":"Install","text":"julia> ]\npkg> add https://github.com/LudwigBoess/SPHKernels.jl","category":"page"},{"location":"#Table-of-contents","page":"Table of Contents","title":"Table of contents","text":"","category":"section"},{"location":"","page":"Table of Contents","title":"Table of Contents","text":"CurrentModule = SPHKernels\nDocTestSetup = quote\n    using SPHKernels\nend","category":"page"},{"location":"","page":"Table of Contents","title":"Table of Contents","text":"Pages = [ \"index.md\", \n          \"install.md\", \n          \"kernels.md\",\n          \"extending.md\", \n          \"api.md\"]\nDepth = 3","category":"page"}]
}
